{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Estructura en leguaje C:\
	Encabezado: Librer\'edas\
		#include <stdlib.h>\
		# include <stdio.h>\
 \
	Funci\'f3n principal\
		int main(int argc, char* argv[] )\{\
			* int argc -> N\'famero de par\'e1metros. (Valor m\'e1ximo de argv)\
				- Se utiliza para gestionar errores.\
			* char* argv[] -> Puntero a un arreglo (Arreglo que guarda todos los par\'e1metros)\
				argv[0] -> ./ejecucionPrograma\
		\
		char buffer[128]; \
			// 128 siempre ser\'e1 el tama\'f1o predestinado para guardar un mensaje\
		sprintf(buffer, \'93Hola Primer Programa en C\\n\'94); \
			// Guarda en buffer el contenido\
		write(1, buffer, strlen(buffer));  \
			// 1 - Imprimir por consola\
			// buffer, variable a ser impresa\
			// Tama\'f1o de la variable a ser imprimida\
		\}\
\
// %d enteros, %c caracteres, %f decimales, %s string\
\
Uso de sprintf y write\
	* Sprintf permite imprimir cualquier cosa\
\
		int edad_chico = 12;\
		int edad_chica = 20;\
		char letra = 'z';\
		float x = 10.327\
		char palabra[] = \'93String\'94;\
		char *puntero = \'93Puntero de strings\'94;\
		char buffer[128];\
		sprintf(buffer, \'93Edad chico: %d, Edad chica: %d, Letra: %c, Flotante: %f, Arreglo: %s, Puntero: %s\'94, edad_chico, edad_chica, letra, x, palabra, puntero);\
		write(1, buffer, strlen(buffer));\
\
// Par\'e1metros de un proceso\
\
gcc -o programa1 clase_exec.c\
./programa1 l\'e1piz 2 argumento3\
\
#include <stdlib.h>\
#include <stdio.h>\
#include <unistd.h>\
\
void Usage()\{\
	printf(\'93Usage: ./programa1 arg1 [arg2 \'85 argn] \\n\'94);\
	printf(\'93Este programa escribe por pantalla la lista de argumentos que recibe\'94);\
\}\
\
int main(int argc, char* argv[])\{\
	\
	char buffer[80];\
	\
	// Controlamos error si el usuario no teclea par\'e1metros\
	if (argc <= 1) \
		Usage();\
\
	for (int i = 0; i < argc, i++)\{\
	// argc es el n\'famero de par\'e1metros que introduce el usuario\
		if (i == 0)\{\
			sprintf(buffer, \'93El argumento %d es %s (es el nombre del ejecutable)\\n\'94, i, argv[i]);\
		\}else\{\
			sprintf(buffer, \'93El argumento %d es %s\\n\'94, i, argv[i]);\
		\}\
		wirte(1, buffer, strlen(buffer));\
	\}\
	return 0;\
\}\
\
\
// Compilaci\'f3n y ejecuci\'f3n en linux\
\
codigo.c\
nombre <\'97 Ejecutable\
\
TERMINAL:\
	gcc -o nombre codigo.c\
	./nombre\
\
\
\
\
}